; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


[env]
lib_ldf_mode = deep+
build_flags = 
    -Wall                                                   ;Turn on all optional warnings which are desirable for normal code.
    -Wno-unused-variable                                    ;Suppres warnings about unused variables.

[espressif]
esp_lib_deps = 
    nietaktowny/wifi_controller@^1.1.5
    nietaktowny/nvs_controller@^1.0.0
esp_monitor_speed = 115200                                  ;Default esp32 monitor speed.
esp_monitor_filters =
  direct                                  ;Do-nothing: forward all data unchanged.
  esp32_exception_decoder                 ;Custom filter for Espressif 32 which decodes crash exception
  log2file                                ;Log data to a file “platformio-device-monitor-%date%.log” located in the current working directory
esp_build_flags =
    -Wextra                                                 ;Enables an additional set of flags not covered by -Wall.

[env:default]
build_type = release
platform = espressif32
board = esp-wrover-kit
framework = espidf
monitor_speed = ${espressif.esp_monitor_speed}
monitor_filters = ${espressif.esp_monitor_filters}
build_flags = ${espressif.esp_build_flags}
lib_deps = ${espressif.esp_lib_deps}


[env:esp32-test]
build_type = test
platform = espressif32
board = esp32dev
framework = espidf
build_src_filter = "main.c"
monitor_filters = ${espressif.esp_monitor_filters}
monitor_speed = ${espressif.esp_monitor_speed}
lib_deps = ${espressif.esp_lib_deps}
test_port = COM12
test_ignore = desktop/*
test_framework = unity


[native]
native_build_src_flags =
  ${env.build_src_flags}
native_sdl_coverage_build_flags =         ;Flags used for generating coverage data with unit tests.
  -fprofile-abs-path
  -lgcov
  -O0
  --coverage
native_sdl_build_flags =
  ${env.build_flags}
  -Wall
native_ignore_test_dirs = embedded/*      ;Skip embedded tests when running on native.

[env:native_tests]
build_type = test
platform = native
test_framework = unity
build_flags = ${native.native_build_src_flags}
test_ignore = ${native.native_ignore_test_dirs}

